class MyStack {


    Queue<Integer> q1;
    Queue<Integer> q2;
    public MyStack() {
        this.q1 =new LinkedList<>();
        this.q2 =new LinkedList<>();
        
    }
    
    public void push(int x) {
        q1.add(x);
        
    }
    
    public int pop() {
        int temp =0;
        if(q1.size() == 1){
            temp = q1.peek();
            q1.poll();
        }

        while(!q1.isEmpty()){
            temp = q1.peek();
            q2.add(q1.poll());
        }
        while(q2.size() > 1){
            q1.add(q2.poll());
        }
        q2.poll();
        return temp;
    }
    
    public int top() {
         int temp =0;
         while(!q1.isEmpty()){
            temp = q1.peek();
            q2.add(q1.poll());
        }
        while(!q2.isEmpty()){
            q1.add(q2.poll());
        }
        q2.poll();
        return temp;

        
    }
    
    public boolean empty() {

        return q1.isEmpty() && q2.isEmpty();
        
    }
}

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack obj = new MyStack();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.top();
 * boolean param_4 = obj.empty();
 */