public class Solution {
    public int minCost(int[][] costs) {
        
        
       int n = costs.length;
        if(n ==0) return 0;
       int[][] dp = new int[n][3];
       dp[n-1][0] = costs[n-1][0];
         dp[n-1][1] = costs[n-1][1];
         dp[n-1][2] = costs[n-1][2];

            for(int i = n-2 ; i >= 0; i--){
                
                dp[i][0]= costs[i][0]+ Math.min(dp[i+1][2] , dp[i+1][1]);
                dp[i][1]= costs[i][1]+ Math.min(dp[i+1][2] , dp[i+1][0]);
                dp[i][2]= costs[i][2]+ Math.min(dp[i+1][0] , dp[i+1][1]);
            }
        
        return Math.min(dp[0][0], Math.min(dp[0][1], dp[0][2]));
        
        
    }

    // Main method for testing
    public static void main(String[] args) {
        Solution solution = new Solution();

        int[][] costs1 = {
            {17, 2, 17},
            {16, 14, 5},
            {12, 3, 19},
            {15, 4, 18}
        };
        System.out.println(solution.minCost(costs1)); 

        int[][] costs2 = {
            {7, 6, 2}
        };
        System.out.println(solution.minCost(costs2)); 

        int[][] costs3 = {
            {8, 15, 12},
            {20, 7, 9},
            {5, 6, 13}
        };
        System.out.println(solution.minCost(costs3)); 

        int[][] costs4 = {};
        System.out.println(solution.minCost(costs4)); 
    }
}
