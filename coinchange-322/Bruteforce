class Solution {
    public int coinChange(int[] coins, int amount) {

        

        int res = helper(coins,amount,0, amount);

        return res == (amount+1)?-1:res;
    }

    public int helper(int[] coins , int amount , int index,int amount2){
        
        if(amount ==0) return 0;

        if(index >= coins.length  || amount< 0) return amount2+1;

        //choose case
        int case1 = 1+ helper(coins , amount-coins[index], index,amount2);

        int case2 = 0+ helper(coins, amount , index+1 , amount2);

        return Math.min(case1, case2);
    }
}


//2^n complexity

